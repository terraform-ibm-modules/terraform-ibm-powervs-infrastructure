#! /bin/bash

set -e

USAGE="
NB: This script has been designed to be run from the repos root level directroy, as that is where it will be executed from in the pre-validation stage of the catalog onboarding pipeline.

The script will generate SSH keys and then append them to the catalogValidationValues.json file which is generated by the onboarding catalog pipeline before this script runs.

Usage (from repos root directory): ./tests/scripts/pre-validation-key-generation.sh <directory_of_json>

where:
<directory_of_json> = The directory where the catalogValidationValues.json file exists (will be the same directroy as the terraform code being onboarded)
"

if [ $# -eq 0 ]; then
  echo "No arguments supplied. See usage:"
  echo "${USAGE}"
  exit 1
fi

DIR=$1

# Generate SSH keys and place in temp directory
temp_dir=$(mktemp -d)
ssh-keygen -f "${temp_dir}/id_rsa" -t rsa -N '' <<<y

# Extract key values and delete temp directory
ssh_public_key=$(cat "${temp_dir}/id_rsa.pub")
ssh_private_key=$(cat "${temp_dir}/id_rsa")
rm -rf "${temp_dir}"

# Append the SSH key values to the JSON file which will be used during catalog onboarding validation
json_file="${DIR}/catalogValidationValues.json"  # This gets created by pipeline code based on the catalogValidationValues.json.template
echo "Appending SSH key values to ${json_file}.."
jq -r --arg ssh_public_key "${ssh_public_key}" --arg ssh_private_key "${ssh_private_key}" '. + {ssh_public_key: $ssh_public_key, ssh_private_key: $ssh_private_key}' "${json_file}" > tmpfile && mv tmpfile "${json_file}" || exit 1

echo "Pre-validation complete successfully"
